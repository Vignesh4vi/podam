"Story","Title","Result","Date","Stability","Duration (s)"
"Constructors unit test","Podam should be able to create instances of JAXBElement","SUCCESS","2017-10-20T17:32:45.121+05:30","0.0","0.11"
"Constructors unit test","Podam should be able to create instances of JAXBElements declared as instance variables in a POJO","SUCCESS","2017-10-20T17:32:42.854+05:30","0.0","0.17"
"Constructors unit test","Podam should be able to create instances of abstract POJOs with factory methods which return concrete types","SUCCESS","2017-10-20T17:32:44.775+05:30","0.0","0.13"
"Constructors unit test","Podam should be able to create instances of generic POJOs with factory methods when the concrete type is known","SUCCESS","2017-10-20T17:32:43.617+05:30","0.0","0.11"
"Constructors unit test","Podam should be able to create instances of generic read only POJOs with factory methods when the concrete type is known","SUCCESS","2017-10-20T17:32:44.437+05:30","0.0","0.11"
"Constructors unit test","Podam should be able to create instances of inner classes","SUCCESS","2017-10-20T17:32:43.126+05:30","0.0","0.11"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Collections","SUCCESS","2017-10-20T17:32:42.729+05:30","0.0","0.13"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Maps","SUCCESS","2017-10-20T17:32:44.546+05:30","0.0","0.11"
"Constructors unit test","Podam should be able to manufacture POJOs which contain immutable collections","SUCCESS","2017-10-20T17:32:43.235+05:30","0.0","0.13"
"Constructors unit test","Podam should be able to manufacture any type of Lists","SUCCESS","2017-10-20T17:32:43.019+05:30","0.0","0.11"
"Constructors unit test","Podam should be able to manufacture any type of Maps","SUCCESS","2017-10-20T17:32:44.199+05:30","0.0","0.1"
"Constructors unit test","Podam should be able to manufacture instances of the Observable class","SUCCESS","2017-10-20T17:32:42.615+05:30","0.0","0.11"
"Constructors unit test","Podam should choose the fullest constructor when invoked for full data","SUCCESS","2017-10-20T17:32:44.905+05:30","0.0","0.11"
"Constructors unit test","Podam should choose the lightest constructor when the standard manufacturing method is invoked","SUCCESS","2017-10-20T17:32:42.390+05:30","0.0","0.12"
"Constructors unit test","Podam should correctly handle generic collections in constructor with memoization disabled","SUCCESS","2017-10-20T17:32:43.960+05:30","0.0","0.11"
"Constructors unit test","Podam should correctly handle generic collections in constructor with memoization enabled","SUCCESS","2017-10-20T17:32:43.502+05:30","0.0","0.12"
"Constructors unit test","Podam should create instances of POJOs extending generic classes","SUCCESS","2017-10-20T17:32:43.723+05:30","0.0","0.11"
"Constructors unit test","Podam should handle classes with generic Key/Value types","SUCCESS","2017-10-20T17:32:43.829+05:30","0.0","0.13"
"Constructors unit test","Podam should handle classes with read only maps having same key and value types","SUCCESS","2017-10-20T17:32:45.230+05:30","0.0","0.13"
"Constructors unit test","Podam should handle constructors with generic arrays during Pojo instantiation","SUCCESS","2017-10-20T17:32:44.304+05:30","0.0","0.13"
"Constructors unit test","Podam should handle constructors with multiple generics during Pojo instantiation","SUCCESS","2017-10-20T17:32:44.660+05:30","0.0","0.11"
"Constructors unit test","Podam should handle generics in setters during Pojo instantiation","SUCCESS","2017-10-20T17:32:44.068+05:30","0.0","0.13"
"Constructors unit test","Podam should handle generics in static constructors during POJO instantiation","SUCCESS","2017-10-20T17:32:45.013+05:30","0.0","0.11"
"Constructors unit test","Podam should handle generics in the constructor","SUCCESS","2017-10-20T17:32:43.368+05:30","0.0","0.13"
"Constructors unit test","Podam should manufacture package private POJOs","SUCCESS","2017-10-20T17:32:42.510+05:30","0.0","0.1"
