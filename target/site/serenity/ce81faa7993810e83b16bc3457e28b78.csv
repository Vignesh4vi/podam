"Story","Title","Result","Date","Stability","Duration (s)"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a Method heavy comparator","SUCCESS","2017-10-20T17:32:29.501+05:30","0.0","0.14"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a Method light comparator","SUCCESS","2017-10-20T17:32:29.756+05:30","0.0","0.15"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a constructor heavy comparator","SUCCESS","2017-10-20T17:32:29.381+05:30","0.0","0.12"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a constructor light comparator","SUCCESS","2017-10-20T17:32:29.643+05:30","0.0","0.11"
"Memoization test","Even when memoization is true, if generics Pojos have different types, objects should not be equal","SUCCESS","2017-10-20T17:32:33.800+05:30","0.0","0.15"
"Class info test","In Presence of excluded attributes, the Class Info object should not contain those attributes","SUCCESS","2017-10-20T17:32:47.472+05:30","0.0","0.1"
"Abnormal pojos test","Invoking Podam on a POJO with a circular constructor (e.g. java.net.URL) leads to a null POJO","SUCCESS","2017-10-20T17:32:30.703+05:30","0.0","0.21"
"Abnormal pojos test","Invoking Podam on a POJO with a private, no arguments constructor, should return a non null POJO","SUCCESS","2017-10-20T17:32:30.586+05:30","0.0","0.12"
"Abnormal pojos test","Invoking Podam on a POJO with both circular and non circular constructors (e.g. javax.activation.DataHandler) should lead to a non empty POJO","SUCCESS","2017-10-20T17:32:32.122+05:30","0.0","0.21"
"Podam factory basic types test","Invoking Podam on an Abstract class should return a null pojo","SUCCESS","2017-10-20T17:32:40.119+05:30","0.0","0.11"
"Podam factory basic types test","Invoking Podam on an interface should return an empty POJO","SUCCESS","2017-10-20T17:32:39.732+05:30","0.0","0.14"
"Memoization test","Memoization should work correctly for collections and arrays","SUCCESS","2017-10-20T17:32:33.318+05:30","0.0","0.2"
"Memoization test","Memoization should work for recursive Pojos","SUCCESS","2017-10-20T17:32:33.518+05:30","0.0","0.15"
"Memoization test","Memoization should work with Generics","SUCCESS","2017-10-20T17:32:33.669+05:30","0.0","0.13"
"Type manufacturing test","Podam Messaging System should return a Byte wrapped value","SUCCESS","2017-10-20T17:32:37.474+05:30","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a Character wrapped value","SUCCESS","2017-10-20T17:32:38.031+05:30","0.0","0.13"
"Type manufacturing test","Podam Messaging System should return a Double wrapped value","SUCCESS","2017-10-20T17:32:38.369+05:30","0.0","0.12"
"Type manufacturing test","Podam Messaging System should return a Float wrapped value","SUCCESS","2017-10-20T17:32:36.384+05:30","0.0","0.15"
"Type manufacturing test","Podam Messaging System should return a Long wrapped value","SUCCESS","2017-10-20T17:32:36.799+05:30","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a Short wrapped value","SUCCESS","2017-10-20T17:32:37.820+05:30","0.0","0.1"
"Type manufacturing test","Podam Messaging System should return a String value","SUCCESS","2017-10-20T17:32:37.580+05:30","0.0","0.13"
"Type manufacturing test","Podam Messaging System should return a boolean primitive value","SUCCESS","2017-10-20T17:32:38.263+05:30","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a boolean wrapped value","SUCCESS","2017-10-20T17:32:37.250+05:30","0.0","0.12"
"Type manufacturing test","Podam Messaging System should return a byte primitive value","SUCCESS","2017-10-20T17:32:37.123+05:30","0.0","0.13"
"Type manufacturing test","Podam Messaging System should return a char primitive value","SUCCESS","2017-10-20T17:32:37.368+05:30","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a double primitive value","SUCCESS","2017-10-20T17:32:38.158+05:30","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a float primitive value","SUCCESS","2017-10-20T17:32:37.925+05:30","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a long primitive value","SUCCESS","2017-10-20T17:32:36.908+05:30","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a short primitive value","SUCCESS","2017-10-20T17:32:36.530+05:30","0.0","0.14"
"Type manufacturing test","Podam Messaging System should return an Enum value","SUCCESS","2017-10-20T17:32:36.670+05:30","0.0","0.13"
"Type manufacturing test","Podam Messaging System should return an int primitive value","SUCCESS","2017-10-20T17:32:37.714+05:30","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return an integer value","SUCCESS","2017-10-20T17:32:37.017+05:30","0.0","0.11"
"External factory unit test","Podam cannot fill interface attributes if the external factory does not manufacture the right type","SUCCESS","2017-10-20T17:32:50.466+05:30","0.0","0.11"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces","SUCCESS","2017-10-20T17:32:49.774+05:30","0.0","0.14"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces which extend Map","SUCCESS","2017-10-20T17:32:49.496+05:30","0.0","0.15"
"Validated pojo test","Podam should allow validation annotations customization","SUCCESS","2017-10-20T17:32:48.362+05:30","0.0","0.12"
"Annotations test","Podam should assign exactly the values specified with the @PodamStrategyValue annotation","SUCCESS","2017-10-20T17:32:34.930+05:30","0.0","0.16"
"Annotations test","Podam should assign precise values and lengths when a String is annotated with @PodamStringValue","SUCCESS","2017-10-20T17:32:36.177+05:30","0.0","0.11"
"Factory unit test","Podam should be able to create an abstract class with help of factory","SUCCESS","2017-10-20T17:32:30.247+05:30","0.0","0.14"
"Collections test","Podam should be able to create instances of Concurrent Hash Maps","SUCCESS","2017-10-20T17:32:46.325+05:30","0.0","0.15"
"Collections test","Podam should be able to create instances of Hash Maps","SUCCESS","2017-10-20T17:32:46.620+05:30","0.0","0.11"
"Constructors unit test","Podam should be able to create instances of JAXBElement","SUCCESS","2017-10-20T17:32:45.121+05:30","0.0","0.11"
"Constructors unit test","Podam should be able to create instances of JAXBElements declared as instance variables in a POJO","SUCCESS","2017-10-20T17:32:42.854+05:30","0.0","0.17"
"Collections test","Podam should be able to create instances of Sorted Maps","SUCCESS","2017-10-20T17:32:45.650+05:30","0.0","0.12"
"Constructors unit test","Podam should be able to create instances of abstract POJOs with factory methods which return concrete types","SUCCESS","2017-10-20T17:32:44.775+05:30","0.0","0.13"
"Constructors unit test","Podam should be able to create instances of generic POJOs with factory methods when the concrete type is known","SUCCESS","2017-10-20T17:32:43.617+05:30","0.0","0.11"
"Constructors unit test","Podam should be able to create instances of generic read only POJOs with factory methods when the concrete type is known","SUCCESS","2017-10-20T17:32:44.437+05:30","0.0","0.11"
"Constructors unit test","Podam should be able to create instances of inner classes","SUCCESS","2017-10-20T17:32:43.126+05:30","0.0","0.11"
"Collections test","Podam should be able to fill in POJOs with raw type collection attributes and default values to Object","SUCCESS","2017-10-20T17:32:45.504+05:30","0.0","0.15"
"Class info test","Podam should be able to find non-standard attributes with a custom class info strategy","SUCCESS","2017-10-20T17:32:47.257+05:30","0.0","0.11"
"Validated pojo test","Podam should be able to fulfill most of the javax Validation framework","SUCCESS","2017-10-20T17:32:48.615+05:30","0.0","0.22"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Collections","SUCCESS","2017-10-20T17:32:42.729+05:30","0.0","0.13"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Maps","SUCCESS","2017-10-20T17:32:44.546+05:30","0.0","0.11"
"Constructors unit test","Podam should be able to manufacture POJOs which contain immutable collections","SUCCESS","2017-10-20T17:32:43.235+05:30","0.0","0.13"
"Constructors unit test","Podam should be able to manufacture any type of Lists","SUCCESS","2017-10-20T17:32:43.019+05:30","0.0","0.11"
"Constructors unit test","Podam should be able to manufacture any type of Maps","SUCCESS","2017-10-20T17:32:44.199+05:30","0.0","0.1"
"Constructors unit test","Podam should be able to manufacture instances of the Observable class","SUCCESS","2017-10-20T17:32:42.615+05:30","0.0","0.11"
"Constructors unit test","Podam should choose the fullest constructor when invoked for full data","SUCCESS","2017-10-20T17:32:44.905+05:30","0.0","0.11"
"Constructors unit test","Podam should choose the lightest constructor when the standard manufacturing method is invoked","SUCCESS","2017-10-20T17:32:42.390+05:30","0.0","0.12"
"Random data provider strategy impl initialisation unit test","Podam should correctly generate HashMaps with Long as key type","SUCCESS","2017-10-20T17:32:29.912+05:30","0.0","0.12"
"Constructors unit test","Podam should correctly handle generic collections in constructor with memoization disabled","SUCCESS","2017-10-20T17:32:43.960+05:30","0.0","0.11"
"Constructors unit test","Podam should correctly handle generic collections in constructor with memoization enabled","SUCCESS","2017-10-20T17:32:43.502+05:30","0.0","0.12"
"Extensions test","Podam should create InputStream with the custom type manufacturer","SUCCESS","2017-10-20T17:32:25.949+05:30","0.0","0.33"
"Extensions test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2017-10-20T17:32:24.166+05:30","0.0","0.69"
"Random data provider strategy impl initialisation unit test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2017-10-20T17:32:30.031+05:30","0.0","0.14"
"Extensions test","Podam should create Timestamp with the custom type manufacturer","SUCCESS","2017-10-20T17:32:25.503+05:30","0.0","0.44"
"Read only complex types test","Podam should create an instance of an Abstract class with a factory method which returns a concrete type even if the concrete type has got read-only attributes. These will be empty.","SUCCESS","2017-10-20T17:32:41.858+05:30","0.0","0.12"
"Constructors unit test","Podam should create instances of POJOs extending generic classes","SUCCESS","2017-10-20T17:32:43.723+05:30","0.0","0.11"
"Extensions test","Podam should fill AttributeMetadata with the attribute name","SUCCESS","2017-10-20T17:32:26.281+05:30","0.0","0.17"
"Podam factory basic types test","Podam should fill Java native types","SUCCESS","2017-10-20T17:32:39.334+05:30","0.0","0.11"
"Podam factory basic types test","Podam should fill Java string type","SUCCESS","2017-10-20T17:32:41.098+05:30","0.0","0.12"
"Podam factory basic types test","Podam should fill Java string type with full constructor","SUCCESS","2017-10-20T17:32:41.213+05:30","0.0","0.13"
"External factory unit test","Podam should fill POJOs and interface attributes if a full constructor sets the interface attribute value","SUCCESS","2017-10-20T17:32:50.701+05:30","0.0","0.14"
"Podam factory basic types test","Podam should fill POJOs with non default constructors","SUCCESS","2017-10-20T17:32:40.704+05:30","0.0","0.13"
"Abnormal pojos test","Podam should fill POJOs with protected, non default constructors","SUCCESS","2017-10-20T17:32:31.176+05:30","0.0","0.14"
"Abnormal pojos test","Podam should fill POJOs with public, non default constructors","SUCCESS","2017-10-20T17:32:30.909+05:30","0.0","0.15"
"Podam factory basic types test","Podam should fill array when invoking the factory population directly","SUCCESS","2017-10-20T17:32:40.587+05:30","0.0","0.12"
"Podam factory basic types test","Podam should fill arrays with elements","SUCCESS","2017-10-20T17:32:40.369+05:30","0.0","0.11"
"Abnormal pojos test","Podam should fill embedded abstract classes if a concrete type has been specified","SUCCESS","2017-10-20T17:32:31.059+05:30","0.0","0.12"
"Podam factory basic types test","Podam should fill in Maps of the containing class type","SUCCESS","2017-10-20T17:32:39.553+05:30","0.0","0.18"
"Read only complex types test","Podam should fill in POJOs which contain internal loops (e.g. objects that reference parents)","SUCCESS","2017-10-20T17:32:42.088+05:30","0.0","0.13"
"Podam factory basic types test","Podam should fill in POJOs which have a circular dependency","SUCCESS","2017-10-20T17:32:40.974+05:30","0.0","0.12"
"Podam factory basic types test","Podam should fill in POJOs which have a circular dependency and custom depth","SUCCESS","2017-10-20T17:32:39.059+05:30","0.0","0.13"
"Podam factory basic types test","Podam should fill in POJOs with Enums","SUCCESS","2017-10-20T17:32:39.442+05:30","0.0","0.11"
"Collections test","Podam should fill in POJOs with attributes containing wildcards","SUCCESS","2017-10-20T17:32:46.733+05:30","0.0","0.13"
"Podam factory basic types test","Podam should fill in a POJO with basic jvm types","SUCCESS","2017-10-20T17:32:39.875+05:30","0.0","0.13"
"Read only complex types test","Podam should fill in complex (e.g. with more than two generic types), read-only POJOs","SUCCESS","2017-10-20T17:32:41.980+05:30","0.0","0.11"
"Podam factory basic types test","Podam should fill in lists of the containing class type","SUCCESS","2017-10-20T17:32:40.834+05:30","0.0","0.14"
"Read only complex types test","Podam should fill in read-only POJOs","SUCCESS","2017-10-20T17:32:42.223+05:30","0.0","0.12"
"Walk through example unit test","Podam should fill in the Address POJO correctly","SUCCESS","2017-10-20T17:32:28.867+05:30","0.0","0.17"
"Walk through example unit test","Podam should fill in the Bank Account POJO correctly","SUCCESS","2017-10-20T17:32:28.756+05:30","0.0","0.11"
"Walk through example unit test","Podam should fill in the Country POJO correctly","SUCCESS","2017-10-20T17:32:27.987+05:30","0.0","0.12"
"Walk through example unit test","Podam should fill in the Order POJO correctly","SUCCESS","2017-10-20T17:32:28.496+05:30","0.0","0.14"
"Podam factory basic types test","Podam should fill in wildcard Enum fields","SUCCESS","2017-10-20T17:32:40.005+05:30","0.0","0.11"
"Podam factory basic types test","Podam should fill recursive POJOs correctly, including all their fields","SUCCESS","2017-10-20T17:32:40.482+05:30","0.0","0.11"
"Podam factory basic types test","Podam should fill recursive POJOs when invoking the factory population directly","SUCCESS","2017-10-20T17:32:40.230+05:30","0.0","0.14"
"Walk through example unit test","Podam should fill the Article POJO correctly","SUCCESS","2017-10-20T17:32:28.637+05:30","0.0","0.12"
"Walk through example unit test","Podam should fill the Client POJO correctly","SUCCESS","2017-10-20T17:32:28.110+05:30","0.0","0.38"
"Walk through example unit test","Podam should fill the OrderItem POJO correctly","SUCCESS","2017-10-20T17:32:29.038+05:30","0.0","0.11"
"Abnormal pojos test","Podam should fill values invoking children setters accepting a type different from the parent type","SUCCESS","2017-10-20T17:32:30.432+05:30","0.0","0.15"
"Class info test","Podam should generate a ClassInfo which contains information for the setters contained in the POJO","SUCCESS","2017-10-20T17:32:47.577+05:30","0.0","0.13"
"Abnormal pojos test","Podam should generate a non null POJO for Abstract types with a concrete type","SUCCESS","2017-10-20T17:32:31.536+05:30","0.0","0.14"
"Randomness test","Podam should generate evenly distributed random integers","SUCCESS","2017-10-20T17:32:46.900+05:30","0.0","0.2"
"Annotations test","Podam should handle POJOs with annotated field and setter","SUCCESS","2017-10-20T17:32:35.250+05:30","0.0","0.14"
"Annotations test","Podam should handle POJOs with constructors that have one or more self references to the POJO class, provided the required constructor is annotated with @PodamConstructor","SUCCESS","2017-10-20T17:32:35.625+05:30","0.0","0.13"
"Annotations test","Podam should handle POJOs with multiple annotated fields, ignoring any non Podam annotation ","SUCCESS","2017-10-20T17:32:34.387+05:30","0.0","0.15"
"Collections test","Podam should handle POJOs with no setters and collections in the constructor","SUCCESS","2017-10-20T17:32:45.976+05:30","0.0","0.17"
"Abnormal pojos test","Podam should handle POJOs with private constructors only","SUCCESS","2017-10-20T17:32:31.959+05:30","0.0","0.16"
"Abnormal pojos test","Podam should handle POJOs with self reference constructors but not default constructors without the need for the @PodamConstructor annotation","SUCCESS","2017-10-20T17:32:31.678+05:30","0.0","0.12"
"Singletons test","Podam should handle Singletons with parameters in the static method","SUCCESS","2017-10-20T17:32:38.646+05:30","0.0","0.2"
"Non EJB pojo test","Podam should handle attributes in accordance with custom Class Info Strategies","SUCCESS","2017-10-20T17:32:27.771+05:30","0.0","0.17"
"Inheritance test","Podam should handle basic inheritance scenarios","SUCCESS","2017-10-20T17:32:49.012+05:30","0.0","0.11"
"Boolean unit test","Podam should handle booleans correctly","SUCCESS","2017-10-20T17:32:38.874+05:30","0.0","0.16"
"Annotations test","Podam should handle both native and wrapped boolean values with @PodamBooleanValue annotation","SUCCESS","2017-10-20T17:32:34.274+05:30","0.0","0.11"
"Annotations test","Podam should handle both native and wrapped byte values with @PodamByteValue annotation","SUCCESS","2017-10-20T17:32:34.538+05:30","0.0","0.14"
"Annotations test","Podam should handle both native and wrapped char values with @PodamCharValue annotation","SUCCESS","2017-10-20T17:32:34.674+05:30","0.0","0.13"
"Annotations test","Podam should handle both native and wrapped double values with @PodamDoubleValue annotation","SUCCESS","2017-10-20T17:32:34.806+05:30","0.0","0.12"
"Annotations test","Podam should handle both native and wrapped float values with @PodamFloatValue annotation","SUCCESS","2017-10-20T17:32:35.396+05:30","0.0","0.23"
"Annotations test","Podam should handle both native and wrapped integer values with @PodamIntValue annotation","SUCCESS","2017-10-20T17:32:34.159+05:30","0.0","0.11"
"Annotations test","Podam should handle both native and wrapped long values with @PodamLongValue annotation","SUCCESS","2017-10-20T17:32:35.757+05:30","0.0","0.15"
"Annotations test","Podam should handle both native and wrapped short values with @PodamShortValue annotation","SUCCESS","2017-10-20T17:32:35.907+05:30","0.0","0.13"
"Constructors unit test","Podam should handle classes with generic Key/Value types","SUCCESS","2017-10-20T17:32:43.829+05:30","0.0","0.13"
"Constructors unit test","Podam should handle classes with read only maps having same key and value types","SUCCESS","2017-10-20T17:32:45.230+05:30","0.0","0.13"
"Constructors unit test","Podam should handle constructors with generic arrays during Pojo instantiation","SUCCESS","2017-10-20T17:32:44.304+05:30","0.0","0.13"
"Constructors unit test","Podam should handle constructors with multiple generics during Pojo instantiation","SUCCESS","2017-10-20T17:32:44.660+05:30","0.0","0.11"
"Constructors unit test","Podam should handle generics in setters during Pojo instantiation","SUCCESS","2017-10-20T17:32:44.068+05:30","0.0","0.13"
"Constructors unit test","Podam should handle generics in static constructors during POJO instantiation","SUCCESS","2017-10-20T17:32:45.013+05:30","0.0","0.11"
"Constructors unit test","Podam should handle generics in the constructor","SUCCESS","2017-10-20T17:32:43.368+05:30","0.0","0.13"
"Annotations test","Podam should handle immutable POJOs annotated with @PodamConstructor","SUCCESS","2017-10-20T17:32:35.096+05:30","0.0","0.15"
"Collections test","Podam should handle immutable POJOs with generified collections in the constructor","SUCCESS","2017-10-20T17:32:46.148+05:30","0.0","0.18"
"Collections test","Podam should handle immutable Pojos with non generic collections","SUCCESS","2017-10-20T17:32:46.471+05:30","0.0","0.15"
"Podam factory basic types test","Podam should handle immutable non annotated POJOs","SUCCESS","2017-10-20T17:32:39.187+05:30","0.0","0.15"
"Collections test","Podam should handle standard collections","SUCCESS","2017-10-20T17:32:45.766+05:30","0.0","0.21"
"Inheritance test","Podam should handle the manufacturing of POJOs which inherit from other classes","SUCCESS","2017-10-20T17:32:49.304+05:30","0.0","0.17"
"Class unit test","Podam should handle the manufacturing of POJOs with generic types in constructor","SUCCESS","2017-10-20T17:32:41.426+05:30","0.0","0.17"
"Class unit test","Podam should handle the manufacturing of basic types","SUCCESS","2017-10-20T17:32:41.592+05:30","0.0","0.12"
"Class unit test","Podam should handle the manufacturing of generic POJOs","SUCCESS","2017-10-20T17:32:41.713+05:30","0.0","0.11"
"Inheritance test","Podam should manufacture all POJOs in a tree hierarchy","SUCCESS","2017-10-20T17:32:49.126+05:30","0.0","0.18"
"Inheritance test","Podam should manufacture attributes implementing Collection and Map interfaces","SUCCESS","2017-10-20T17:32:48.874+05:30","0.0","0.14"
"Constructors unit test","Podam should manufacture package private POJOs","SUCCESS","2017-10-20T17:32:42.510+05:30","0.0","0.1"
"External factory unit test","Podam should not be able to create instances of an Abstract class even if the POJO has a full constructor","SUCCESS","2017-10-20T17:32:49.966+05:30","0.0","0.14"
"External factory unit test","Podam should not be able to create instances of an Abstract class if the external factory does not provide a concrete implementation","SUCCESS","2017-10-20T17:32:50.356+05:30","0.0","0.11"
"External factory unit test","Podam should not create instances of an interface when given an external factory which does not manufacture the concrete type","SUCCESS","2017-10-20T17:32:50.581+05:30","0.0","0.12"
"External factory unit test","Podam should not create instances of non-instantiable classes","SUCCESS","2017-10-20T17:32:50.102+05:30","0.0","0.12"
"Annotations test","Podam should not fill POJO's attributes annotated with @PodamExclude","SUCCESS","2017-10-20T17:32:34.023+05:30","0.0","0.14"
"Abnormal pojos test","Podam should return a null value for non instantiable POJOs","SUCCESS","2017-10-20T17:32:31.315+05:30","0.0","0.22"
"Class info test","Podam should return valid class info for POJOs with no attributes","SUCCESS","2017-10-20T17:32:47.112+05:30","0.0","0.14"
"Abnormal pojos test","Podam should throw an exception if a POJO contains invalid getters or setters","SUCCESS","2017-10-20T17:32:31.796+05:30","0.0","0.16"
"Multiple interfaces inheritance test","Podam will create an instance of a POJO but its interface types won't be instantiated","SUCCESS","2017-10-20T17:32:49.648+05:30","0.0","0.13"
"Annotations test","The @PodamCollection annotation should allow to set sizes on all collections and arrays","SUCCESS","2017-10-20T17:32:36.036+05:30","0.0","0.14"
"Class info test","The ClassInfo object created for a class should handle @PodamExcludeAnnotations","SUCCESS","2017-10-20T17:32:47.366+05:30","0.0","0.11"
"Random data provider strategy impl initialisation unit test","The Random Data Provider Strategy should be initialised correctly and allow for changes in the number of collection elements","SUCCESS","2017-10-20T17:32:29.256+05:30","0.0","0.12"
"External factory unit test","The management of external factories should be correct and chaining should work","SUCCESS","2017-10-20T17:32:50.222+05:30","0.0","0.13"
"XML datatype unit test","When given an external factory, Podam should be able to create instances of XMLGregorianCalendar","SUCCESS","2017-10-20T17:32:32.729+05:30","0.0","0.12"
"XML datatype unit test","When given an external factory, Podam should be able to create instances of the Duration class","SUCCESS","2017-10-20T17:32:32.416+05:30","0.0","0.16"
"XML datatype unit test","When given an external factory, Podam should be able to fill POJOs with instance attributes containing XMLGregorianCalendar and Duration","SUCCESS","2017-10-20T17:32:32.572+05:30","0.0","0.16"
"Memoization test","When memoization cache is cleared then objects should not be equal","SUCCESS","2017-10-20T17:32:33.170+05:30","0.0","0.15"
"Memoization test","When memoization is set to false Podam should return different instances for different invocations","SUCCESS","2017-10-20T17:32:32.908+05:30","0.0","0.15"
"Memoization test","When memoization is set to true Podam should return the same instance for different invocations","SUCCESS","2017-10-20T17:32:33.058+05:30","0.0","0.11"
"Validated pojo test","When the @Digits and @DecimalMin and @DecimalMax applied to the same field, Podam should use minimum requirements","SUCCESS","2017-10-20T17:32:47.733+05:30","0.0","0.63"
"Validated pojo test","When the @Size annotation doesn't have a max length specified, Podam should assign a sensible value","SUCCESS","2017-10-20T17:32:48.478+05:30","0.0","0.14"
